// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: transformpb/transformation_spec.proto
// Protobuf Java Version: 4.31.1

package com.github.kleewho.gen.transformpb.transformpb;

@com.google.protobuf.Generated
public interface RuleOrBuilder extends
    // @@protoc_insertion_point(interface_extends:transformpb.Rule)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * *
   * &#64;field target_field
   * &#64;brief The field to create or update with the result of the CEL expression.
   * Use dot notation for nested fields (e.g., "user.profile.full_name").
   * </pre>
   *
   * <code>string target_field = 1 [json_name = "targetField"];</code>
   * @return The targetField.
   */
  java.lang.String getTargetField();
  /**
   * <pre>
   * *
   * &#64;field target_field
   * &#64;brief The field to create or update with the result of the CEL expression.
   * Use dot notation for nested fields (e.g., "user.profile.full_name").
   * </pre>
   *
   * <code>string target_field = 1 [json_name = "targetField"];</code>
   * @return The bytes for targetField.
   */
  com.google.protobuf.ByteString
      getTargetFieldBytes();

  /**
   * <pre>
   * *
   * &#64;field expression
   * &#64;brief The CEL expression that computes the value for the target_field.
   * The root of the input message is available as a variable, typically named `message`.
   * Example: "message.first_name + ' ' + message.last_name"
   * </pre>
   *
   * <code>string cel_expression = 2 [json_name = "celExpression"];</code>
   * @return The celExpression.
   */
  java.lang.String getCelExpression();
  /**
   * <pre>
   * *
   * &#64;field expression
   * &#64;brief The CEL expression that computes the value for the target_field.
   * The root of the input message is available as a variable, typically named `message`.
   * Example: "message.first_name + ' ' + message.last_name"
   * </pre>
   *
   * <code>string cel_expression = 2 [json_name = "celExpression"];</code>
   * @return The bytes for celExpression.
   */
  com.google.protobuf.ByteString
      getCelExpressionBytes();

  /**
   * <pre>
   * *
   * &#64;field condition
   * &#64;brief An optional CEL expression that must evaluate to `true` for this
   * rule to be executed. If empty, the rule is always executed.
   * Example: "has(message.email)" or "message.user_type == 'premium'"
   * </pre>
   *
   * <code>optional string condition = 3 [json_name = "condition"];</code>
   * @return Whether the condition field is set.
   */
  boolean hasCondition();
  /**
   * <pre>
   * *
   * &#64;field condition
   * &#64;brief An optional CEL expression that must evaluate to `true` for this
   * rule to be executed. If empty, the rule is always executed.
   * Example: "has(message.email)" or "message.user_type == 'premium'"
   * </pre>
   *
   * <code>optional string condition = 3 [json_name = "condition"];</code>
   * @return The condition.
   */
  java.lang.String getCondition();
  /**
   * <pre>
   * *
   * &#64;field condition
   * &#64;brief An optional CEL expression that must evaluate to `true` for this
   * rule to be executed. If empty, the rule is always executed.
   * Example: "has(message.email)" or "message.user_type == 'premium'"
   * </pre>
   *
   * <code>optional string condition = 3 [json_name = "condition"];</code>
   * @return The bytes for condition.
   */
  com.google.protobuf.ByteString
      getConditionBytes();
}
